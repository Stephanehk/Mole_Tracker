roundness = [0.35367765131532297, 0.3472471485641353, 0.954929658551372, 0.2928450952890874, 0.7957747154594768, 0.40869417485326215, 0.7957747154594768, 0.5602253996834716, 0.5602253996834716, 0.5658842421045168, 0.5305164769729844, 0.7957747154594768, 0.7957747154594768,0.5456740906007841, 0.4244131815783876, 0.6620845632622846, 0.6111549814728781, 0.7957747154594768, 0.7957747154594768, 0.6620845632622846, 0.3890454164468553, 0.20371832715762603,1.1317684842090336, 0.9902974236829043,1.1317684842090336, 1.1317684842090336, 1.1317684842090336, 1.1317684842090336, 1.1317684842090336, 0.6366197723675814, 0.7073553026306459, 1.1317684842090336, 0.6366197723675814, 0.716197243913529, 0.9902974236829043, 0.3183098861837907, 1.1317684842090336, 0.15915494309189535, 0.9902974236829043, 0.716197243913529, 0.7957747154594768, 0.1886280807015056, 0.5570423008216338, 1.1317684842090336, 1.1317684842090336, 0.7073553026306459, 1.1317684842090336, 0.45836623610465854, 1.1317684842090336, 0.09744180189299716, 1.1317684842090336, 1.1317684842090336, 1.1317684842090336, 1.1317684842090336, 0.6620845632622846, 1.1317684842090336, 1.1317684842090336, 0.716197243913529, 0.716197243913529, 0.9902974236829043, 0.9902974236829043, 0.9902974236829043, 0.6366197723675814, 1.1317684842090336, 0.35367765131532297, 0.9902974236829043, 1.1317684842090336, 0.8488263631567752, 1.1317684842090336, 0.2122065907891938, 0.6366197723675814, 0.1818913635335947, 0.09794150344116637,0.1431452742601662, 0.6366197723675814, 0.10133048279899219, 0.8488263631567752, 0.2829421210522584, 0.716197243913529, 0.3890454164468553, 1.1317684842090336, 0.6366197723675814, 0.17888489471485758, 0.716197243913529, 0.45978094670991987, 1.1317684842090336,0.13679433125253815, 1.1317684842090336, 0.28582928555279163, 0.33779824656239016, 0.2659655937891229, 0.25464790894703254, 0.5602253996834716, 0.45836623610465854, 0.3183098861837907, 1.1317684842090336, 0.7957747154594768, 0.17282198806654564, 0.16799688437477842, 1.1317684842090336, 0.1989436788648692, 0.7957747154594768, 0.2829421210522584, 0.3183098861837907, 0.6366197723675814, 0.2829421210522584, 0.716197243913529, 0.25464790894703254, 0.6366197723675814, 0.6111549814728781, 0.22006609415175654, 0.2785211504108169, 0.18503827293729008, 0.1989436788648692, 0.45836623610465854, 0.17904931097838225, 0.3183098861837907, 0.40743665431525206, 0.3183098861837907, 0.45978094670991987, 0.3183098861837907, 0.477464829275686, 0.3897672075719886, 0.2515041076020075, 0.1818913635335947, 0.1909859317102744, 0.35367765131532297, 0.17683882565766149, 0.6366197723675814, 0.2122065907891938, 0.3779929898432514, 0.3978873577297384, 0.5658842421045168, 0.40743665431525206, 0.45836623610465854, 0.45978094670991987, 0.35367765131532297, 1.1317684842090336, 0.1818913635335947, 0.24757435592072607, 0.477464829275686, 0.3637827270671894, 0.2122065907891938, 0.16574715966966616,
0.1582131978664995, 0.3183098861837907, 0.22006609415175654, 0.7957747154594768, 0.3978873577297384, 0.22006609415175654, 0.6366197723675814, 0.30557749073643903, 0.7957747154594768, 0.2785211504108169, 0.6366197723675814, 0.16552114081557115, 1.1317684842090336, 0.5658842421045168, 0.24757435592072607, 0.7957747154594768, 0.477464829275686, 0.7957747154594768, 0.1886280807015056, 0.35650707252584557, 0.4244131815783876, 0.1356113124569996, 0.7957747154594768, 0.6366197723675814, 1.1317684842090336, 0.08112052501082755, 0.954929658551372, 1.1317684842090336, 1.1317684842090336, 0.3183098861837907, 0.7957747154594768, 0.49370512959118557, 0.716197243913529, 0.716197243913529, 0.21645072260497766, 0.46772064908638633, 0.2829421210522584, 0.4417361685815871, 0.6719875374991137,0.716197243913529, 0.3897672075719886, 0.41575168807678786, 0.1818913635335947, 0.716197243913529, 0.2829421210522584, 0.40743665431525206, 0.6366197723675814, 0.7957747154594768,0.46772064908638633, 0.41575168807678786, 0.09251913646864504, 0.716197243913529,0.954929658551372, 0.6366197723675814, 0.2829421210522584, 0.1818913635335947, 0.7957747154594768, 0.6366197723675814, 0.954929658551372, 0.6366197723675814, 0.9902974236829043, 0.3382042540702776, 0.13926057520540844, 0.8488263631567752, 1.2732395447351628]

aspect_ratios = [1.2, 1.2222222222222223, 1.0, 1.6666666666666667, 1.3333333333333333, 1.5, 1.3333333333333333, 1.6666666666666667, 1.25, 1.2, 1.5,1.3333333333333333, 1.3333333333333333, 1.1666666666666667, 2.0, 1.25, 1.6666666666666667, 1.3333333333333333, 1.3333333333333333,1.25, 1.5, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.3333333333333333, 1.3333333333333333, 1.0, 4.0, 1.0, 8.0, 1.0, 1.3333333333333333, 1.3333333333333333, 1.8, 1.3333333333333333, 1.0, 1.0, 1.5, 1.0,1.6666666666666667, 1.0, 4.666666666666667, 1.0, 1.0, 1.0, 1.0, 1.25, 1.0, 1.0, 1.3333333333333333, 1.3333333333333333, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 6.0, 2.0, 7.0, 13.0,1.625, 1.3333333333333333, 1.4166666666666667, 1.0, 1.2, 1.3333333333333333, 1.5, 1.0, 1.3333333333333333, 1.2222222222222223, 1.3333333333333333, 1.0, 1.0, 1.1, 1.0, 1.75, 1.0, 1.1538461538461537, 5.0, 1.25, 1.25, 2.6666666666666665, 1.0, 1.0, 1.7272727272727273, 3.0, 1.0, 2.0, 1.3333333333333333, 1.6666666666666667, 4.0, 2.0, 1.8, 1.3333333333333333, 2.5, 1.3333333333333333, 1.0, 1.5, 1.6, 1.7, 2.6666666666666665, 1.25, 2.6666666666666665, 1.0, 1.6666666666666667, 4.0, 1.2, 1.0, 2.0, 1.1666666666666667, 1.8, 3.5, 1.1111111111111112, 1.2, 2.4, 2.0, 6.0, 1.1428571428571428, 1.3333333333333333, 1.0, 1.0, 1.6666666666666667, 1.5, 1.2, 1.0, 3.5, 1.0909090909090908, 1.3333333333333333, 1.1666666666666667, 6.0, 1.625, 2.6, 4.0, 2.25, 1.3333333333333333, 2.0, 2.25, 1.3333333333333333, 2.5, 1.3333333333333333, 1.6, 2.0, 3.3333333333333335, 1.0, 1.0, 3.0, 1.0, 2.0, 1.3333333333333333, 2.25, 2.5, 1.5, 2.0, 1.0,1.3333333333333333, 1.0, 6.333333333333333, 1.0, 1.0, 1.0, 2.0, 1.3333333333333333, 1.4, 1.0, 1.3333333333333333, 2.0, 1.1666666666666667, 2.0, 1.4, 1.0, 1.0, 1.1666666666666667, 1.1666666666666667, 7.0, 1.3333333333333333, 1.5, 1.6666666666666667, 1.3333333333333333, 1.3333333333333333, 1.1666666666666667, 1.4, 4.25, 1.0, 1.0, 2.0, 1.5, 3.5, 1.3333333333333333, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0]

formfactors = [0.9999999999999999, 0.9999999999999999, 1.0, 1.0000000000000002, 0.9999999999999999, 1.0000000000000002, 0.9999999999999999, 1.0,1.0, 1.0000000000000002, 0.9999999999999999, 0.9999999999999999, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0, 0.9999999999999999, 0.9999999999999999, 1.0, 1.0, 1.0000000000000002,1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.3333333333333333, 1.3333333333333333, 1.0, 4.0, 1.0, 8.0, 1.0, 1.3333333333333333, 1.3333333333333333, 1.8, 1.3333333333333333, 1.0, 1.0, 1.5, 1.0, 1.6666666666666667, 1.0, 4.666666666666667, 1.0, 1.0, 1.0, 1.0, 1.25, 1.0, 1.0, 1.3333333333333333, 1.3333333333333333, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 6.0, 2.0, 7.0, 13.0,1.0000000000000002, 0.9999999999999999, 1.0000000000000002, 0.9999999999999998, 0.9999999999999999, 1.0, 1.0, 0.9999999999999999,0.9999999999999999, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0000000000000002, 0.9999999999999998, 1.0, 1.0, 1.0000000000000002, 0.9999999999999999, 0.9999999999999999, 1.0, 1.0000000000000002, 0.9999999999999999, 0.9999999999999999, 0.9999999999999999, 1.0, 1.0000000000000002, 0.9999999999999999, 1.0000000000000002, 1.0, 0.9999999999999998, 0.9999999999999999, 1.0, 0.9999999999999999, 0.9999999999999999, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 0.9999999999999999, 1.0000000000000002, 1.0,1.0, 0.9999999999999998, 0.9999999999999999, 1.0000000000000002, 1.0, 0.9999999999999999, 0.9999999999999999, 0.9999999999999998,0.9999999999999999, 0.9999999999999998, 1.0000000000000002, 0.9999999999999998, 1.0000000000000002, 0.9999999999999999, 1.0, 1.0, 0.9999999999999999, 0.9999999999999999, 1.0, 1.0, 0.9999999999999998, 0.9999999999999999, 0.9999999999999998, 0.9999999999999998, 1.0, 1.0000000000000002, 0.9999999999999999, 0.9999999999999999, 0.9999999999999998, 0.9999999999999999, 0.9999999999999999, 0.9999999999999998, 0.9999999999999999, 0.9999999999999999, 0.9999999999999999, 1.0, 0.9999999999999999, 1.0000000000000002, 1.0, 0.9999999999999999, 0.9999999999999998, 0.9999999999999999, 1.0, 1.0, 1.0, 1.0000000000000002, 0.9999999999999999, 0.9999999999999999, 0.9999999999999999, 1.0000000000000002, 1.0, 0.9999999999999999, 0.9999999999999999, 1.0, 0.9999999999999999, 1.0000000000000002, 1.0, 1.0, 1.0, 1.0000000000000002, 0.9999999999999999, 1.0, 1.0000000000000002, 1.0, 0.9999999999999999, 1.0000000000000002, 1.0, 1.0, 0.9999999999999999, 0.9999999999999999, 0.9999999999999999, 0.9999999999999999, 1.0000000000000002, 1.0000000000000002, 1.0, 1.0, 1.0, 0.9999999999999999, 0.9999999999999999, 1.0, 0.9999999999999999, 0.9999999999999999, 1.0, 0.9999999999999999, 1.0, 1.0, 1.0, 0.9999999999999998, 1.0000000000000002]

errors = [36.0, 100.82644672762966, 26.0, 49.76562486613399, 16.639999921669208, 49.7656247992009, 16.0, 16.639999977619794, 25.694444484917966, 36.734694473963096, 25.694444545628247, 16.0, 16.639999921669208, 49.765625133866166, 16.640000033570384, 25.694444484917966,16.639999977619794, 16.639999921669208, 16.639999921669208, 26.0, 25.694444545628247, 26.0,16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 4.444444457395971, 16.0, 16.0, 16.639999921669208, 16.0, 16.0, 4.44444443149294, 16.0, 4.444444483299077, 16.0, 16.639999921669208, 16.639999921669208, 36.73469363898635, 16.0, 16.0, 16.0, 9.562500000000007, 16.0, 16.639999977619794, 16.0, 16.639999854528764, 16.0, 16.0, 16.0, 16.0, 26.0, 16.0, 16.0, 16.0, 16.639999921669208, 16.0, 16.0, 16.0, 4.0,16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 4.0, 4.0, 4.0, 4.0,81.81000002832516, 16.0, 169.8622434119003, 16.0, 0, 16.639999921669208, 26.0, 16.0, 16.639999921669208, 100.82644672762966, 16.0,50.0, 16.0, 121.84027816956136, 16.0, 26.0, 64.0, 196.0, 4.0, 25.694444484917966, 25.694444484917966, 16.0, 16.0, 26.0, 144.0, 26.0, 16.0, 26.0, 16.639999921669208, 100.0, 4.44444443149294, 4.444444457395971, 36.0, 16.0, 10.0, 16.639999921669208, 36.0, 50.0, 36.0, 122.0, 16.0, 25.694444484917966, 16.0, 50.0, 16.0, 4.44444443149294, 36.734694473963096, 50.0, 10.0, 49.765625133866166, 36.0,10.0, 100.82644665537937, 36.734694473963096, 36.0, 4.444444457395971, 4.444444405589917, 64.0, 16.0, 16.0, 36.0, 16.639999977619794, 26.0, 36.0, 16.0, 9.562499950824748, 144.0, 16.0, 50.0, 4.444444405589917, 81.81000002832516, 36.734693895902375, 4.0, 25.69444432302402, 16.639999921669208, 9.562499803298785, 25.69444432302402, 16.0, 9.562499852474101, 16.639999921669208, 36.73469357475736,4.444444457395971, 18.027603513174405, 16.0, 50.0, 9.562499901649423, 26.0, 10.0, 16.0, 26.0, 10.0, 10.0, 196.0, 26.0, 16.639999921669208, 16.0, 17.77777864812062, 26.0, 16.0, 16.0, 16.0, 16.639999921669208, 36.73469409776473, 26.0, 16.639999921669208, 36.0,50.0, 16.0, 36.0, 50.0, 26.0, 50.0, 50.0, 4.444444444444495, 16.0, 26.0, 16.0, 16.639999921669208, 16.0, 50.0, 36.73469409776473, 26.0, 26.0, 26.0, 0, 25.694444545628247, 10.0, 16.639999921669208, 4.0, 10.0, 0, 16.0, 82.0, 81.81000024076266, 16.0, 4.0]

is_mole = [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0,1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0,1, 0, 1, 1,1,1,0,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,1,1,1,0,1,1,0,0,1,0, 0,0,0,0,0,0,1,0,1,1,1,0,0,1,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,0,1,0,1,1,0,1,0,0,1,0,0,1,0,1,0,0,1,0]

rois = ['roi13.png', 'roi15.png', 'roi14.png', 'roi17.png', 'roi16.png', 'roi19.png', 'roi18.png', 'roi111.png', 'roi110.png', 'roi113.png', 'roi112.png', 'roi114.png', 'roi116.png', 'roi115.png', 'roi121.png', 'roi119.png', 'roi122.png', 'roi123.png', 'roi125.png', 'roi126.png', 'roi127.png', 'roi128.png', 'roi22.png', 'roi23.png', 'roi24.png', 'roi25.png', 'roi26.png', 'roi28.png', 'roi27.png', 'roi29.png', 'roi210.png', 'roi213.png', 'roi212.png', 'roi211.png', 'roi214.png', 'roi216.png', 'roi215.png', 'roi218.png', 'roi217.png', 'roi219.png', 'roi221.png', 'roi222.png', 'roi220.png', 'roi223.png', 'roi224.png', 'roi225.png', 'roi227.png', 'roi229.png', 'roi228.png', 'roi230.png', 'roi231.png', 'roi232.png', 'roi234.png', 'roi233.png', 'roi235.png', 'roi236.png', 'roi238.png', 'roi237.png', 'roi239.png', 'roi241.png', 'roi240.png', 'roi242.png', 'roi243.png', 'roi245.png', 'roi244.png', 'roi246.png', 'roi247.png', 'roi248.png', 'roi249.png', 'roi250.png', 'roi34.png', 'roi33.png', 'roi32.png', 'roi36.png', 'roi38.png', 'roi35.png', 'roi37.png', 'roi312.png', 'roi310.png', 'roi311.png', 'roi313.png', 'roi315.png', 'roi314.png', 'roi316.png', 'roi317.png', 'roi318.png', 'roi319.png', 'roi321.png', 'roi320.png', 'roi322.png', 'roi323.png', 'roi327.png', 'roi326.png', 'roi325.png', 'roi324.png', 'roi328.png', 'roi329.png', 'roi331.png', 'roi330.png', 'roi332.png', 'roi333.png', 'roi334.png', 'roi335.png', 'roi337.png', 'roi338.png', 'roi336.png', 'roi339.png', 'roi340.png', 'roi341.png', 'roi343.png', 'roi342.png', 'roi344.png', 'roi345.png', 'roi346.png', 'roi348.png', 'roi349.png', 'roi347.png', 'roi350.png', 'roi351.png', 'roi352.png', 'roi353.png', 'roi356.png', 'roi354.png', 'roi358.png', 'roi359.png', 'roi355.png', 'roi357.png', 'roi361.png', 'roi360.png', 'roi363.png', 'roi364.png', 'roi362.png', 'roi365.png', 'roi366.png', 'roi367.png', 'roi369.png', 'roi371.png', 'roi368.png', 'roi373.png', 'roi370.png', 'roi374.png', 'roi375.png', 'roi376.png', 'roi377.png', 'roi378.png', 'roi372.png', 'roi379.png', 'roi380.png', 'roi381.png', 'roi382.png', 'roi383.png', 'roi385.png', 'roi384.png', 'roi386.png', 'roi387.png', 'roi389.png', 'roi388.png', 'roi390.png', 'roi391.png', 'roi392.png', 'roi393.png', 'roi394.png', 'roi396.png', 'roi398.png', 'roi397.png', 'roi399.png', 'roi3100.png', 'roi3102.png', 'roi3104.png', 'roi3105.png', 'roi3106.png', 'roi3101.png', 'roi3108.png', 'roi3107.png', 'roi3109.png', 'roi3110.png', 'roi3111.png', 'roi3113.png', 'roi3112.png', 'roi3114.png', 'roi3115.png', 'roi3119.png', 'roi3118.png', 'roi3116.png', 'roi3117.png', 'roi3120.png', 'roi3121.png', 'roi3122.png', 'roi3125.png', 'roi3124.png', 'roi3123.png', 'roi3126.png', 'roi3127.png', 'roi3129.png', 'roi3133.png', 'roi3131.png', 'roi3128.png', 'roi3136.png', 'roi3132.png', 'roi3130.png', 'roi3138.png', 'roi3137.png', 'roi3139.png', 'roi3134.png', 'roi3135.png', 'roi3140.png','roi251.png', 'roi253.png', 'roi252.png']

import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import normalize
from sklearn import svm, metrics
import warnings
warnings.filterwarnings("ignore")

X = [roundness, aspect_ratios, formfactors, errors]
X = normalize(X)
X = np.array(X)
X = X.transpose()
Y = is_mole
Y = np.array(Y)

def plot_decision_boundary(x,y,model, file_name):
  '''
  x,y: 2D MeshGrid input
  model: Keras Model API Object
  '''
  grid = np.stack((x,y))
  grid = grid.T.reshape(-1,2)
  outs = model.predict(grid)
  y1 = outs.T[0].reshape(x.shape[0],x.shape[0])
  plt.contourf(x,y,y1)
  plt.savefig(file_name)

def machine_learning_tests (X,Y):
    X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2)

    clf = svm.SVC(kernel='rbf', random_state=0)
    clf.fit(X_train, y_train)
    y_pred = clf.predict(X_test)
    print("Support Vector Machine Accuracy:",metrics.accuracy_score(y_test, y_pred))

    from sklearn.ensemble import RandomForestClassifier
    rfc = RandomForestClassifier(n_estimators=100, max_depth=2,random_state=0)
    rfc.fit(X_train, y_train)
    y_pred = rfc.predict(X_test)
    print("Random Forrest Accuracy:",metrics.accuracy_score(y_test, y_pred))

    from sklearn.ensemble import AdaBoostClassifier
    adb = AdaBoostClassifier(n_estimators=100, random_state=0)
    adb.fit(X_train,y_train)
    y_pred = adb.predict(X_test)
    print("Ada Boost Accuracy:",metrics.accuracy_score(y_test, y_pred))

    from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis
    qda = QuadraticDiscriminantAnalysis()
    qda.fit(X_train,y_train)
    y_pred = qda.predict(X_test)
    print("Quadratic Descriminant Anal Accuracy:",metrics.accuracy_score(y_test, y_pred))

    from sklearn.neural_network import MLPClassifier
    mlp = MLPClassifier(solver='lbfgs', alpha=1e-5,hidden_layer_sizes=(5, 2), random_state=1)
    mlp.fit(X_train,y_train)
    y_pred = mlp.predict(X_test)
    print("Multi Layer Perceptron Accuracy:",metrics.accuracy_score(y_test, y_pred))

machine_learning_tests (X,Y)

def split_data(characteristic):
    mole_ch = []
    n_mole_ch = []
    for i in range (len(characteristic)):
        if Y[i] == 1:
            mole_ch.append(characteristic[i])
        else:
            n_mole_ch.append(characteristic[i])
    return mole_ch, n_mole_ch

m_roundness, n_m_roundness = split_data(roundness)
m_aspect_ratios, n_m_aspect_ratios = split_data(aspect_ratios)
m_formfactors, n_m_formfactors = split_data(formfactors)
m_errors, n_m_errors = split_data(errors)

X_mole = [m_roundness, m_aspect_ratios, m_formfactors, m_errors]
X_n_mole = [n_m_roundness, n_m_aspect_ratios, n_m_formfactors, n_m_errors]

X_mole = normalize(X_mole)
X_mole = np.array(X_mole)
X_mole = X_mole.transpose()

X_n_mole = normalize(X_n_mole)
X_n_mole = np.array(X_n_mole)
X_n_mole = X_n_mole.transpose()

import matplotlib.pyplot as plt
#calculate 2d indicators
def indic(data):
    #alternatively you can calulate any other indicators
    max = np.max(data, axis=1)
    min = np.min(data, axis=1)
    return max, min
#x,y = indic(X)
x,y = indic(X_mole)
x2,y2 = indic(X_n_mole)

plt.scatter(x, y, color='r', alpha=0.2)
plt.scatter(x2, y2, color='g', alpha=0.2)

plt.show()
